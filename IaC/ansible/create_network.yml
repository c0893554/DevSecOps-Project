# create_network.yml
    - name: Load initial networks variables
      include_vars:
        file: "{{ configs_dir }}/networks.yml"
  
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr }}"
      register: vpc
    
    - name: Create Subnet to WebServer
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ region }}"
        az: "{{ region }}a"
        tags:
          Name: "{{ subnet_name }}"
      register: subnet

    - name: Create Internet Gateway WebServer
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ igw_name }}"
      register: igw

    - name: Create Route Table WebServer
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ route_table_name }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: route_table

    - name: Create Security Group WebServer
      amazon.aws.ec2_security_group:
        name: "{{ security_group_name }}"
        description: "Security Group for Web Server"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ security_group_name }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"
            group_desc: "Allow HTTP"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ subnet_ssh_cidr }}"
            group_desc: "Allow SSH"
      register: security_group

    - name: Create subnet DBServer
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_db_cidr }}"
        region: "{{ region }}"
        az: "{{ region }}a"
        tags:
          Name: "{{ subnet_db_name }}"
      register: subnet_db

    - name: Create Route Table DBServer
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ route_table_name_db }}"
        subnets:
          - "{{ subnet_db.subnet.id }}"
          - "{{ subnet.subnet.id }}"
      register: route_table_db

    - name: Create Security Group DBServer
      amazon.aws.ec2_security_group:
        name: "{{ security_group_name_db }}"
        description: "Security Group for DataBase Server"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ security_group_name_db }}"
        rules:
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: "{{ subnet_cidr }}"
            group_desc: "Allow MySQL"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ subnet_ssh_cidr }}"
            group_desc: "Allow SSH"
      register: security_group_db

    - name: Create subnet SSH Server
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_ssh_cidr }}"
        region: "{{ region }}"
        az: "{{ region }}a"
        tags:
          Name: "{{ subnet_db_name }}"
      register: subnet_shh

    - name: Create Route Table SSH Server
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ route_table_name_ssh }}"
        subnets:
          - "{{ subnet_db.subnet.id }}"
          - "{{ subnet.subnet.id }}"
          - "{{ subnet_shh.subnet.id }}"
      register: route_table_ssh

    - name: Create Security Group SSH Server
      amazon.aws.ec2_security_group:
        name: "{{ security_group_name_ssh }}"
        description: "Security Group for DataBase Server"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ security_group_name_ssh }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
            group_desc: "Allow SSH"
      register: security_group_ssh

    - name: Save Network Configuration to File
      copy:
        dest: "{{ configs_dir }}/network_config.yml"
        content: |
          vpc_id: "{{ vpc.vpc.id }}"
          subnet_id: "{{ subnet.subnet.id }}"
          subnet_db_id: "{{ subnet_db.subnet.id }}"
          subnet_shh_id: "{{ subnet_shh.subnet.id }}"
          security_group_name: "{{ security_group.group_name }}"
          security_group_db_name: "{{ security_group_db.group_name }}"
          security_group_ssh_name: "{{ security_group_ssh.group_name }}"
          security_group_id: "{{ security_group.group_id }}"
          security_group_db_id: "{{ security_group_db.group_id }}"
          security_group_ssh_id: "{{ security_group_ssh.group_id }}"
          route_table_id: "{{ route_table.route_table.id }}"
          route_table_db_id: "{{ route_table_db.route_table.id }}"
          route_table__ssh_id: "{{ route_table_ssh.route_table.id }}"
    
  