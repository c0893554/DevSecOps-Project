# rollback.yml
- name: Rollback AWS Infrastructure
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Load network configuration variables
      include_vars:
        file: network_config.yml
      tags: RemoveVPC
  
    - name: Load Instances configuration variables
      include_vars:
        file: instances_config.yml

    - name: Terminate WebServer Instance
      amazon.aws.ec2_instance:
        state: absent  
        wait: yes
        instance_ids:
          - "{{ ec2_webserver_ids }}"
      register: webserver_terminated

    - name: Terminate DBServer Instance
      amazon.aws.ec2_instance:
        state: absent  
        wait: yes
        instance_ids:
          - "{{ ec2_dbserver_ids }}"
      register: dbserver_terminated

    - name: Terminate SSH Server Instance
      amazon.aws.ec2_instance:
        state: absent 
        wait: yes
        instance_ids:
          - "{{ ec2_sshserver_ids }}"
      register: sshserver_terminated

    - name: Wait for Instances to Terminate Completely
      amazon.aws.ec2_instance_info:
        instance_ids:
          - "{{ ec2_webserver_ids }}"
          - "{{ ec2_dbserver_ids }}"
          - "{{ ec2_sshserver_ids }}"
      register: instances_check
      until: instances_check.instances | length == 0
      retries: 10
      delay: 15

    - name: Remove Subnet Web Server
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        subnet_id: "{{ subnet_id }}"
        state: absent
      ignore_errors: yes  # Ignore if already deleted or does not exist
      tags: RemoveVPC

    - name: Remove Subnet DB Server
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        subnet_id: "{{ subnet_db_id }}"
        state: absent
      ignore_errors: yes  # Ignore if already deleted or does not exist
      tags: RemoveVPC

    - name: Remove Subnet DB Server
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        subnet_id: "{{ subnet_shh_id }}"
        state: absent
      ignore_errors: yes  # Ignore if already deleted or does not exist
      tags: RemoveVPC

    - name: Detach and Delete Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
        state: absent
      ignore_errors: yes  # Skip if there is no internet gateway attached
      tags: RemoveVPC

    - name: Remove VPC if no instances remain (conditional rollback)
      amazon.aws.ec2_vpc_net:
        vpc_id: "{{ vpc_id }}"
        state: absent
        purge_cidrs: yes  
      tags: RemoveVPC
