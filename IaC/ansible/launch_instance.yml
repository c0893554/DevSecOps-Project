# launch_instance.yml
- name: Load initial instances variables
  ansible.builtin.include_vars:
    file: "{{ configs_dir }}/instances.yml"
  tags: instances

- name: Load network configuration variables
  ansible.builtin.include_vars:
    file: "{{ configs_dir }}/network_config.yml"
  tags: instances

- name: Create WebServer Instance
  amazon.aws.ec2_instance:
    name: "{{ ec2_webserver_name }}"
    key_name: "{{ key_webserver_name }}"
    vpc_subnet_id: "{{ subnet_web_id }}"
    instance_type: t2.micro
    image_id: "{{ ami_web_id }}"
    security_group: "{{ security_group_name }}"
    iam_instance_profile: "{{ iam_role_name }}"
    volumes:
      - device_name: "/dev/xvda"
        ebs:
          volume_type: gp2
          volume_size: "{{ volume_size }}"
          encrypted: "{{ encrypted }}"
          kms_key_id: "{{ kms_key_id }}"
    network_interfaces:
      - assign_public_ip: true
  register: ec2_webserver
  tags: instances

- name: Create DBServer Instance
  amazon.aws.ec2_instance:
    name: "{{ ec2_dbserver_name }}"
    key_name: "{{ key_dbserver_name }}"
    vpc_subnet_id: "{{ subnet_db_id }}"
    instance_type: t2.micro
    image_id: "{{ ami_db_id }}"
    security_group: "{{ security_group_db_name }}"
    iam_instance_profile: "{{ iam_role_name }}"
    volumes:
      - device_name: "/dev/xvda"
        ebs:
          volume_type: gp2
          volume_size: "{{ volume_size }}"
          encrypted: "{{ encrypted }}"
          kms_key_id: "{{ kms_key_id }}"
  register: ec2_dbserver
  tags: instances

- name: Create SSH Server Instance
  amazon.aws.ec2_instance:
    name: "{{ ec2_sshserver_name }}"
    key_name: "{{ key_sshserver_name }}"
    vpc_subnet_id: "{{ subnet_shh_id }}"
    instance_type: t2.micro
    image_id: "{{ ami_id }}"
    security_group: "{{ security_group_ssh_name }}"
    network_interfaces:
      - assign_public_ip: true
  register: ec2_sshserver
  tags: instances

- name: Save Instances Configuration to File
  ansible.builtin.copy:
    dest: "{{ configs_dir }}/instances_config.yml"
    mode: '0644'
    owner: root
    group: root
    content: |
      ec2_webserver_ids: "{{ ec2_webserver.instances[0].instance_id }}"
      ec2_dbserver_ids: "{{ ec2_dbserver.instances[0].instance_id }}"
      ec2_sshserver_ids: "{{ ec2_sshserver.instances[0].instance_id }}"
  tags: instances
